
# This workflow will build and (if release) publish Python distributions to PyPI
name: Build-publish

on:
  push:
    paths:
      - '.github/workflows/**'
      - 'include/**'
      - 'scripts/**'
      - 'src/**'
      - 'CMakeLists.txt'
      - 'setup.py'
      - 'pyproject.toml'
    branches:
      - master
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'include/**'
      - 'scripts/**'
      - 'src/**'
      - 'CMakeLists.txt'
      - 'setup.py'
      - 'pyproject.toml'
    branches:
      - master
  release:
    types: [published]

env:
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1

jobs:
  test-install:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, macos-11, macos-12]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies on Ubuntu
      if: runner.os == 'Linux'
      run: |
           sudo apt update
           sudo apt install -y cmake libboost-all-dev libsdl2-dev libfreetype6-dev libgl1-mesa-dev libglu1-mesa-dev libpng-dev libjpeg-dev libbz2-dev libfluidsynth-dev libgme-dev libopenal-dev zlib1g-dev timidity tar nasm

    - name: Apt report
      if: runner.os == 'Linux'
      run: apt list --installed

    - name: Install dependencies on MacOS
      if: runner.os == 'macOS'
      run: brew install cmake boost openal-soft sdl2

    - name: Set up Python ${{ matrix.python-version }} environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Python environment report
      run: python -c "import sys; print(sys.version)"

    - name: Pip install
      run: pip install .[gym]

    - name: Import check
      run: python -c "import vizdoom"

  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          python-version: 37
          platform: manylinux_x86_64
        - os: ubuntu-latest
          python-version: 38
          platform: manylinux_x86_64
        - os: ubuntu-latest
          python-version: 39
          platform: manylinux_x86_64
        - os: ubuntu-latest
          python-version: 310
          platform: manylinux_x86_64
        - os: macos-latest
          python-version: 37
          platform: macosx_x86_64
        - os: macos-latest
          python-version: 38
          platform: macosx_x86_64
        - os: macos-latest
          python-version: 39
          platform: macosx_x86_64
        - os: macos-latest
          python-version: 310
          platform: macosx_x86_64

    steps:
    - uses: actions/checkout@v3
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.12.0
      env:
        CIBW_BUILD: cp${{ matrix.python-version }}-${{ matrix.platform }}
        CIBW_ARCHS: all
        CIBW_BUILD_VERBOSITY: 1

    - name: Store wheels
      uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  build-src:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build src
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        python setup.py sdist
    - name: Store src
      uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  publish:
    runs-on: ubuntu-latest
    needs:
    - build-wheels
    - build-src
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Download dists
      uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}